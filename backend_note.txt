bookmarker project + browser extension:
quickly bookmark any page
(free version) -> only bookmarks + extension
(paid version) -> bookmarks + folders + categories + 
    bookmark includes account (email, username, password encrypted), + note + sharing + 
    csv export and import + export to browser, import from browser +
    page is up test (status code check)


1. basic setup:
    pip install django djangorestframework
    pip install django-cors-headers
    django-admin startproject server .
    add rest_framework, corsheaders to INSTALLED_APPS
    python manage.py startapp accounts
    add accounts to INSTALLED_APPS (local apps go lowest)
    pip install django-environ
    pip install djangorestframework-simplejwt

2. environment variables:
    import django-environ
    create an env instance
    add default debug value to that instance
    create a .env file next to server folder
    make env instance to read from that file
    move secet_key and debug to .env file
    update settings.py (secet_key and debug) to read from env instance

3. add configs:
    add cors headers middleware to MIDDLEWARES above common middleware or whitenoise
    add REST_FRAMEWORK config to settings.py
    add SIMPLE_JWT to settings.py (configs for tokens)

4. custom user model
    add custom user model to accounts (should be called CustomUser to avoid conflict)
    add OTP model to accounts (could be added later as well)
    update/add AUTH_USER_MODEL to settings.py
    add UserManager to managers.py in accounts
    add CustomUser to admin.py in accounts
    make and apply migrations
    python manage.py makemigrations (optional: accounts)
    python manage.py migrate
    create superuser: admin@example.com-Arman-Karimi-shit123*
    python manage.py createsuperuser
    add tests

5. adding auth routes (register and verifyEmail):
    added register serializer
    add register view
    added a url path for register
    requires utils (send_otp_to_user and generate_otp) (not working-email not sending) (fixed)
    email backend needed to be set in settings.py (set to console backend)
    testuser01@gmail.com-Nick-Tole-home123*
    adding email verification view
    email verification serializer that only has one field (otp)
    adding url (ok)

6. configuring CORS:
    corsheaders must exist in INSTALLED_APPS
    add CORS_ALLOWED_ORIGINS and  CSRF_TRUSTED_ORIGINS to settings.py

7. adding login:
    add login serializer
    add login view to accounts/views.py
    login serializer uses RefreshToken from djangorestframework_simplejwt to generate...
    access token and refresh token for user (it is a method in CustomUser model)
    this requires installation of djangorestframework_simplejwt (if not installed yet)
    also SIMPLE_JWT and REST_FRAMEWORK (authentication class) config must exist in settings.py
    add url for login
    test the login with testuser01@gmail.com-Nick-Tole-home123*
    test was successful, email, full_name, access and refresh token were returned

8. add test view (accessible to logged in users only)
    (i previously tested this using httpie, now use frontend)
    add test view (test this in frontend)

9. added a post test request in api (ok)
10. logout needs to be added
    add rest_framework_simplejwt.token_blacklist to isntalled_apps
    run migrations

11. IMPORTANT: Adding basic and session authentication from official docs:
(ALONGSIDE current jwt authentication)
(to be used with browsable api only)

user's bookmark list no option to add bookmarks. fixed.
deleting the old ones, (for user testuser01)
adding 10 actual bookmarks.
problem 01: user should not be able to choose the owner in listcreate api view. [FIXED]
problem 02: bookmark item title max length too short. [FIXED]